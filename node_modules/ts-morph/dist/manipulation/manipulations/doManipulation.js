"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors = require("../../errors");
function doManipulation(sourceFile, textManipulator, nodeHandler, newFilePath) {
    sourceFile._firePreModified();
    const newFileText = textManipulator.getNewText(sourceFile.getFullText());
    try {
        const replacementSourceFile = sourceFile._context.compilerFactory.createCompilerSourceFileFromText(newFilePath || sourceFile.getFilePath(), newFileText);
        nodeHandler.handleNode(sourceFile, replacementSourceFile, replacementSourceFile);
    }
    catch (err) {
        throw new errors.InvalidOperationError(err.message + "\n"
            + `-- Details --\n`
            + `Path: ${sourceFile.getFilePath()}\n`
            + `Text: ${JSON.stringify(textManipulator.getTextForError(newFileText))}\n`
            + `Stack: ${err.stack}`);
    }
}
exports.doManipulation = doManipulation;
