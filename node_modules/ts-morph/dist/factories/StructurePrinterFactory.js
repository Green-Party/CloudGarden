"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// DO NOT EDIT - Automatically maintained by createStructurePrinterFactory.ts
const structurePrinters = require("../structurePrinters");
const utils_1 = require("../utils");
/**
 * Cached lazy factory for StructurePrinters.
 */
class StructurePrinterFactory {
    constructor(_getFormatCodeSettings) {
        this._getFormatCodeSettings = _getFormatCodeSettings;
    }
    getFormatCodeSettings() {
        return this._getFormatCodeSettings();
    }
    forInitializerExpressionableNode() {
        return new structurePrinters.InitializerExpressionableNodeStructurePrinter();
    }
    forModifierableNode() {
        return new structurePrinters.ModifierableNodeStructurePrinter();
    }
    forReturnTypedNode(alwaysWrite) {
        return new structurePrinters.ReturnTypedNodeStructurePrinter(alwaysWrite);
    }
    forTypedNode(separator, alwaysWrite) {
        return new structurePrinters.TypedNodeStructurePrinter(separator, alwaysWrite);
    }
    forClassDeclaration(options) {
        return new structurePrinters.ClassDeclarationStructurePrinter(this, options);
    }
    forConstructorDeclaration(options) {
        return new structurePrinters.ConstructorDeclarationStructurePrinter(this, options);
    }
    forGetAccessorDeclaration(options) {
        return new structurePrinters.GetAccessorDeclarationStructurePrinter(this, options);
    }
    forMethodDeclaration(options) {
        return new structurePrinters.MethodDeclarationStructurePrinter(this, options);
    }
    forPropertyDeclaration() {
        return new structurePrinters.PropertyDeclarationStructurePrinter(this);
    }
    forSetAccessorDeclaration(options) {
        return new structurePrinters.SetAccessorDeclarationStructurePrinter(this, options);
    }
    forPropertyAssignment() {
        return new structurePrinters.PropertyAssignmentStructurePrinter(this);
    }
    forShorthandPropertyAssignment() {
        return new structurePrinters.ShorthandPropertyAssignmentStructurePrinter(this);
    }
    forSpreadAssignment() {
        return new structurePrinters.SpreadAssignmentStructurePrinter(this);
    }
    forDecorator() {
        return new structurePrinters.DecoratorStructurePrinter(this);
    }
    forJSDoc() {
        return new structurePrinters.JSDocStructurePrinter(this);
    }
    forEnumDeclaration() {
        return new structurePrinters.EnumDeclarationStructurePrinter(this);
    }
    forEnumMember() {
        return new structurePrinters.EnumMemberStructurePrinter(this);
    }
    forFunctionDeclaration(options) {
        return new structurePrinters.FunctionDeclarationStructurePrinter(this, options);
    }
    forParameterDeclaration() {
        return new structurePrinters.ParameterDeclarationStructurePrinter(this);
    }
    forCallSignatureDeclaration() {
        return new structurePrinters.CallSignatureDeclarationStructurePrinter(this);
    }
    forConstructSignatureDeclaration() {
        return new structurePrinters.ConstructSignatureDeclarationStructurePrinter(this);
    }
    forIndexSignatureDeclaration() {
        return new structurePrinters.IndexSignatureDeclarationStructurePrinter(this);
    }
    forInterfaceDeclaration() {
        return new structurePrinters.InterfaceDeclarationStructurePrinter(this);
    }
    forMethodSignature() {
        return new structurePrinters.MethodSignatureStructurePrinter(this);
    }
    forPropertySignature() {
        return new structurePrinters.PropertySignatureStructurePrinter(this);
    }
    forTypeElementMemberedNode() {
        return new structurePrinters.TypeElementMemberedNodeStructurePrinter(this);
    }
    forJsxAttribute() {
        return new structurePrinters.JsxAttributeStructurePrinter(this);
    }
    forJsxChildDecider() {
        return new structurePrinters.JsxChildDeciderStructurePrinter(this);
    }
    forJsxElement() {
        return new structurePrinters.JsxElementStructurePrinter(this);
    }
    forJsxAttributeDecider() {
        return new structurePrinters.JsxAttributeDeciderStructurePrinter(this);
    }
    forJsxSelfClosingElement() {
        return new structurePrinters.JsxSelfClosingElementStructurePrinter(this);
    }
    forJsxSpreadAttribute() {
        return new structurePrinters.JsxSpreadAttributeStructurePrinter(this);
    }
    forExportAssignment() {
        return new structurePrinters.ExportAssignmentStructurePrinter(this);
    }
    forExportDeclaration() {
        return new structurePrinters.ExportDeclarationStructurePrinter(this);
    }
    forImportDeclaration() {
        return new structurePrinters.ImportDeclarationStructurePrinter(this);
    }
    forNamespaceDeclaration(options) {
        return new structurePrinters.NamespaceDeclarationStructurePrinter(this, options);
    }
    forNamedImportExportSpecifier() {
        return new structurePrinters.NamedImportExportSpecifierStructurePrinter(this);
    }
    forSourceFile(options) {
        return new structurePrinters.SourceFileStructurePrinter(this, options);
    }
    forStatementedNode(options) {
        return new structurePrinters.StatementedNodeStructurePrinter(this, options);
    }
    forStatements(options) {
        return new structurePrinters.StatementsStructurePrinter(this, options);
    }
    forVariableStatement() {
        return new structurePrinters.VariableStatementStructurePrinter(this);
    }
    forVariableDeclaration() {
        return new structurePrinters.VariableDeclarationStructurePrinter(this);
    }
    forTypeAliasDeclaration() {
        return new structurePrinters.TypeAliasDeclarationStructurePrinter(this);
    }
    forTypeParameterDeclaration() {
        return new structurePrinters.TypeParameterDeclarationStructurePrinter(this);
    }
}
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forInitializerExpressionableNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forModifierableNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forReturnTypedNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forTypedNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forClassDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forConstructorDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forGetAccessorDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forMethodDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forPropertyDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forSetAccessorDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forPropertyAssignment", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forShorthandPropertyAssignment", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forSpreadAssignment", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forDecorator", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJSDoc", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forEnumDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forEnumMember", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forFunctionDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forParameterDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forCallSignatureDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forConstructSignatureDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forIndexSignatureDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forInterfaceDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forMethodSignature", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forPropertySignature", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forTypeElementMemberedNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxAttribute", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxChildDecider", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxElement", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxAttributeDecider", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxSelfClosingElement", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forJsxSpreadAttribute", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forExportAssignment", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forExportDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forImportDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forNamespaceDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forNamedImportExportSpecifier", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forSourceFile", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forStatementedNode", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forStatements", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forVariableStatement", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forVariableDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forTypeAliasDeclaration", null);
__decorate([
    utils_1.Memoize
], StructurePrinterFactory.prototype, "forTypeParameterDeclaration", null);
exports.StructurePrinterFactory = StructurePrinterFactory;
