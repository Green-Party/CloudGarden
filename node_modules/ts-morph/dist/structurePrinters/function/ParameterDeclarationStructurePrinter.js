"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../../errors");
const NodePrinter_1 = require("../NodePrinter");
const formatting_1 = require("../formatting");
class ParameterDeclarationStructurePrinter extends NodePrinter_1.NodePrinter {
    constructor() {
        super(...arguments);
        this.multipleWriter = new formatting_1.CommaSeparatedStructuresPrinter(this);
    }
    printTexts(writer, structures) {
        if (structures == null || structures.length === 0)
            return;
        this.multipleWriter.printText(writer, structures);
    }
    printTextInternal(writer, structure) {
        if (structure.name == null)
            throw new errors_1.NotImplementedError("Not implemented scenario where parameter declaration structure doesn't have a name. Please open an issue if you need this.");
        this.factory.forDecorator().printTextsInline(writer, structure.decorators);
        this.factory.forModifierableNode().printText(writer, structure);
        writer.conditionalWrite(structure.isRestParameter, "...");
        writer.write(structure.name);
        writer.conditionalWrite(structure.hasQuestionToken, "?");
        this.factory.forTypedNode(":", structure.hasQuestionToken).printText(writer, structure);
        this.factory.forInitializerExpressionableNode().printText(writer, structure);
    }
}
exports.ParameterDeclarationStructurePrinter = ParameterDeclarationStructurePrinter;
