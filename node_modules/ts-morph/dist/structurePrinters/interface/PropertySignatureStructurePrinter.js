"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const NodePrinter_1 = require("../NodePrinter");
const formatting_1 = require("../formatting");
class PropertySignatureStructurePrinter extends NodePrinter_1.NodePrinter {
    constructor() {
        super(...arguments);
        this.multipleWriter = new formatting_1.NewLineFormattingStructuresPrinter(this);
    }
    printTexts(writer, structures) {
        this.multipleWriter.printText(writer, structures);
    }
    printTextInternal(writer, structure) {
        this.factory.forJSDoc().printDocs(writer, structure.docs);
        this.factory.forModifierableNode().printText(writer, structure);
        writer.write(structure.name);
        writer.conditionalWrite(structure.hasQuestionToken, "?");
        this.factory.forTypedNode(":").printText(writer, structure);
        // why would someone write an initializer? I guess let them do it...
        this.factory.forInitializerExpressionableNode().printText(writer, structure);
        writer.write(";");
    }
}
exports.PropertySignatureStructurePrinter = PropertySignatureStructurePrinter;
