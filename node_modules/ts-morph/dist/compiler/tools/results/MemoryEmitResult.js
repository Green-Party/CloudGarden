"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const EmitResult_1 = require("./EmitResult");
/**
 * Result of an emit to memory.
 */
class MemoryEmitResult extends EmitResult_1.EmitResult {
    /**
     * @private
     */
    constructor(context, compilerObject, _files) {
        super(context, compilerObject);
        this._files = _files;
    }
    /**
     * Gets the files that were emitted to memory.
     */
    getFiles() {
        return this._files; // assert mutable array
    }
    /**
     * Asynchronously writes the files to the file system.
     */
    saveFiles() {
        const fileSystem = this._context.fileSystemWrapper;
        const promises = this._files.map(f => fileSystem.writeFile(f.filePath, f.writeByteOrderMark ? "\uFEFF" + f.text : f.text));
        return Promise.all(promises);
    }
    /**
     * Synchronously writes the files to the file system.
     * @remarks Use `saveFiles()` as the asynchronous version will be much faster.
     */
    saveFilesSync() {
        const fileSystem = this._context.fileSystemWrapper;
        for (const file of this._files)
            fileSystem.writeFileSync(file.filePath, file.writeByteOrderMark ? "\uFEFF" + file.text : file.text);
    }
}
exports.MemoryEmitResult = MemoryEmitResult;
