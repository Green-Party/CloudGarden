"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const manipulation_1 = require("../../../manipulation");
const common_1 = require("../common");
class HeritageClause extends common_1.Node {
    /**
     * Gets all the type nodes for the heritage clause.
     */
    getTypeNodes() {
        if (this.compilerNode.types == null)
            return [];
        return this.compilerNode.types.map(t => this._getNodeFromCompilerNode(t));
    }
    /**
     * Gets the heritage clause token.
     */
    getToken() {
        return this.compilerNode.token;
    }
    removeExpression(expressionNodeOrIndex) {
        const expressions = this.getTypeNodes();
        const expressionNodeToRemove = typeof expressionNodeOrIndex === "number" ? getExpressionFromIndex(expressionNodeOrIndex) : expressionNodeOrIndex;
        if (expressions.length === 1) {
            const heritageClauses = this.getParentSyntaxListOrThrow().getChildren();
            if (heritageClauses.length === 1)
                manipulation_1.removeChildren({ children: [heritageClauses[0].getParentSyntaxListOrThrow()], removePrecedingSpaces: true });
            else
                manipulation_1.removeChildren({ children: [this], removePrecedingSpaces: true });
        }
        else
            manipulation_1.removeCommaSeparatedChild(expressionNodeToRemove);
        return this;
        function getExpressionFromIndex(index) {
            return expressions[manipulation_1.verifyAndGetIndex(index, expressions.length - 1)];
        }
    }
}
exports.HeritageClause = HeritageClause;
