"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const callBaseSet_1 = require("../callBaseSet");
const Scope_1 = require("../common/Scope");
const scopeableNode = require("./ScopeableNode");
const callBaseGetStructure_1 = require("../callBaseGetStructure");
function ScopedNode(Base) {
    return class extends Base {
        getScope() {
            return scopeableNode.getScopeForNode(this) || Scope_1.Scope.Public;
        }
        setScope(scope) {
            scopeableNode.setScopeForNode(this, scope);
            return this;
        }
        hasScopeKeyword() {
            return scopeableNode.getScopeForNode(this) != null;
        }
        set(structure) {
            callBaseSet_1.callBaseSet(Base.prototype, this, structure);
            if (structure.hasOwnProperty("scope"))
                this.setScope(structure.scope);
            return this;
        }
        getStructure() {
            return callBaseGetStructure_1.callBaseGetStructure(Base.prototype, this, {
                scope: this.hasScopeKeyword() ? this.getScope() : undefined
            });
        }
    };
}
exports.ScopedNode = ScopedNode;
