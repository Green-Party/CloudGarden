"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors = require("../../../errors");
const manipulation_1 = require("../../../manipulation");
const typescript_1 = require("../../../typescript");
const callBaseSet_1 = require("../callBaseSet");
function AwaitableNode(Base) {
    return class extends Base {
        isAwaited() {
            return this.compilerNode.awaitModifier != null;
        }
        getAwaitKeyword() {
            const awaitModifier = this.compilerNode.awaitModifier;
            return this._getNodeFromCompilerNodeIfExists(awaitModifier);
        }
        getAwaitKeywordOrThrow() {
            return errors.throwIfNullOrUndefined(this.getAwaitKeyword(), "Expected to find an await token.");
        }
        setIsAwaited(value) {
            const awaitModifier = this.getAwaitKeyword();
            const isSet = awaitModifier != null;
            if (isSet === value)
                return this;
            if (awaitModifier == null) {
                manipulation_1.insertIntoParentTextRange({
                    insertPos: getAwaitInsertPos(this),
                    parent: this,
                    newText: " await"
                });
            }
            else {
                manipulation_1.removeChildren({
                    children: [awaitModifier],
                    removePrecedingSpaces: true
                });
            }
            return this;
        }
        set(structure) {
            callBaseSet_1.callBaseSet(Base.prototype, this, structure);
            if (structure.isAwaited != null)
                this.setIsAwaited(structure.isAwaited);
            return this;
        }
    };
}
exports.AwaitableNode = AwaitableNode;
function getAwaitInsertPos(node) {
    if (node.getKind() === typescript_1.SyntaxKind.ForOfStatement)
        return node.getFirstChildByKindOrThrow(typescript_1.SyntaxKind.ForKeyword).getEnd();
    throw new errors.NotImplementedError("Expected a for of statement node.");
}
