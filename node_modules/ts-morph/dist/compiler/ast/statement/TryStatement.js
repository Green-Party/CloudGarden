"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors = require("../../../errors");
const Statement_1 = require("./Statement");
exports.TryStatementBase = Statement_1.Statement;
class TryStatement extends exports.TryStatementBase {
    /**
     * Gets this try statement's try block.
     */
    getTryBlock() {
        return this._getNodeFromCompilerNode(this.compilerNode.tryBlock);
    }
    /**
     * Gets this try statement's catch clause or undefined if none exists.
     */
    getCatchClause() {
        return this._getNodeFromCompilerNodeIfExists(this.compilerNode.catchClause);
    }
    /**
     * Gets this try statement's catch clause or throws if none exists.
     */
    getCatchClauseOrThrow() {
        return errors.throwIfNullOrUndefined(this.getCatchClause(), "Expected to find a catch clause.");
    }
    /**
     * Gets this try statement's finally block or undefined if none exists.
     */
    getFinallyBlock() {
        if (this.compilerNode.finallyBlock == null || this.compilerNode.finallyBlock.getFullWidth() === 0)
            return undefined;
        return this._getNodeFromCompilerNode(this.compilerNode.finallyBlock);
    }
    /**
     * Gets this try statement's finally block or throws if none exists.
     */
    getFinallyBlockOrThrow() {
        return errors.throwIfNullOrUndefined(this.getFinallyBlock(), "Expected to find a finally block.");
    }
}
exports.TryStatement = TryStatement;
