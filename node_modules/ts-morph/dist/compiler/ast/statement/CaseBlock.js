"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors = require("../../../errors");
const manipulation_1 = require("../../../manipulation");
const base_1 = require("../base");
const common_1 = require("../common");
exports.CaseBlockBase = base_1.TextInsertableNode(common_1.Node);
class CaseBlock extends exports.CaseBlockBase {
    /**
     * Gets the clauses.
     */
    getClauses() {
        const clauses = this.compilerNode.clauses || [];
        return clauses.map(s => this._getNodeFromCompilerNode(s));
    }
    /**
     * Removes the clause at the specified index.
     * @param index - Index.
     */
    removeClause(index) {
        index = manipulation_1.verifyAndGetIndex(index, this.getClauses().length - 1);
        return this.removeClauses([index, index]);
    }
    /**
     * Removes the clauses in the specified range.
     * @param indexRange - Index range.
     */
    removeClauses(indexRange) {
        const clauses = this.getClauses();
        errors.throwIfRangeOutOfRange(indexRange, [0, clauses.length], "indexRange");
        manipulation_1.removeClausedNodeChildren(clauses.slice(indexRange[0], indexRange[1] + 1));
        return this;
    }
}
exports.CaseBlock = CaseBlock;
