"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = require("../../../typescript");
/** @internal */
var CommentNodeKind;
(function (CommentNodeKind) {
    CommentNodeKind[CommentNodeKind["Statement"] = 0] = "Statement";
    CommentNodeKind[CommentNodeKind["ClassElement"] = 1] = "ClassElement";
    CommentNodeKind[CommentNodeKind["TypeElement"] = 2] = "TypeElement";
    CommentNodeKind[CommentNodeKind["ObjectLiteralElement"] = 3] = "ObjectLiteralElement";
    CommentNodeKind[CommentNodeKind["EnumMember"] = 4] = "EnumMember";
})(CommentNodeKind = exports.CommentNodeKind || (exports.CommentNodeKind = {}));
class CompilerExtendedComment {
    /** @private */
    constructor(fullStart, pos, end, kind, sourceFile, parent) {
        this._fullStart = fullStart;
        this._start = pos; // pos and start are the same for comments
        this._sourceFile = sourceFile;
        this.pos = pos;
        this.end = end;
        this.kind = kind;
        this.flags = typescript_1.ts.NodeFlags.None;
        this.parent = parent;
    }
    getSourceFile() {
        return this._sourceFile;
    }
    getChildCount(sourceFile) {
        return 0;
    }
    getChildAt(index, sourceFile) {
        return undefined; // the compiler definition is wrong
    }
    getChildren(sourceFile) {
        return [];
    }
    getStart(sourceFile, includeJsDocComment) {
        return this._start;
    }
    getFullStart() {
        return this._fullStart;
    }
    getEnd() {
        return this.end;
    }
    getWidth(sourceFile) {
        return this.end - this._start;
    }
    getFullWidth() {
        return this.end - this._fullStart;
    }
    getLeadingTriviaWidth(sourceFile) {
        return this._start - this._fullStart;
    }
    getFullText(sourceFile) {
        return this._sourceFile.text.substring(this._fullStart, this.end);
    }
    getText(sourceFile) {
        return this._sourceFile.text.substring(this._start, this.end);
    }
    getFirstToken(sourceFile) {
        return undefined;
    }
    getLastToken(sourceFile) {
        return undefined;
    }
    forEachChild(cbNode, cbNodeArray) {
        return undefined;
    }
}
exports.CompilerExtendedComment = CompilerExtendedComment;
class CompilerCommentStatement extends CompilerExtendedComment {
    constructor() {
        super(...arguments);
        /** @internal */
        this._commentKind = CommentNodeKind.Statement;
    }
}
exports.CompilerCommentStatement = CompilerCommentStatement;
class CompilerCommentClassElement extends CompilerExtendedComment {
    constructor() {
        super(...arguments);
        /** @internal */
        this._commentKind = CommentNodeKind.ClassElement;
    }
}
exports.CompilerCommentClassElement = CompilerCommentClassElement;
class CompilerCommentTypeElement extends CompilerExtendedComment {
    constructor() {
        super(...arguments);
        /** @internal */
        this._commentKind = CommentNodeKind.TypeElement;
    }
}
exports.CompilerCommentTypeElement = CompilerCommentTypeElement;
class CompilerCommentObjectLiteralElement extends CompilerExtendedComment {
    constructor() {
        super(...arguments);
        /** @internal */
        this._commentKind = CommentNodeKind.ObjectLiteralElement;
    }
}
exports.CompilerCommentObjectLiteralElement = CompilerCommentObjectLiteralElement;
class CompilerCommentEnumMember extends CompilerExtendedComment {
    constructor() {
        super(...arguments);
        /** @internal */
        this._commentKind = CommentNodeKind.EnumMember;
    }
}
exports.CompilerCommentEnumMember = CompilerCommentEnumMember;
