"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = require("../../../typescript");
const expression_1 = require("../expression");
exports.BooleanLiteralBase = expression_1.PrimaryExpression;
class BooleanLiteral extends exports.BooleanLiteralBase {
    /**
     * Gets the literal value.
     */
    getLiteralValue() {
        return this.getKind() === typescript_1.SyntaxKind.TrueKeyword;
    }
    /**
     * Sets the literal value.
     *
     * Note: For the time being, this forgets the current node and returns the new node.
     * @param value - Value to set.
     */
    setLiteralValue(value) {
        if (this.getLiteralValue() === value)
            return this;
        // todo: make this not forget the current node
        const parent = this.getParentSyntaxList() || this.getParentOrThrow();
        const index = this.getChildIndex();
        this.replaceWithText(value ? "true" : "false");
        return parent.getChildAtIndex(index);
    }
}
exports.BooleanLiteral = BooleanLiteral;
