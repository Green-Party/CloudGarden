"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const manipulation_1 = require("../../../manipulation");
const expression_1 = require("../expression");
exports.RegularExpressionLiteralBase = expression_1.LiteralExpression;
class RegularExpressionLiteral extends exports.RegularExpressionLiteralBase {
    /**
     * Gets the literal value.
     */
    getLiteralValue() {
        const pattern = /^\/(.*)\/([^\/]*)$/;
        const text = this.compilerNode.text;
        const matches = pattern.exec(text);
        return new RegExp(matches[1], matches[2]);
    }
    setLiteralValue(regExpOrPattern, flags) {
        let pattern;
        if (typeof regExpOrPattern === "string")
            pattern = regExpOrPattern;
        else {
            pattern = regExpOrPattern.source;
            flags = regExpOrPattern.flags;
        }
        manipulation_1.replaceNodeText({
            sourceFile: this._sourceFile,
            start: this.getStart(),
            replacingLength: this.getWidth(),
            newText: `/${pattern}/${flags || ""}`
        });
        return this;
    }
}
exports.RegularExpressionLiteral = RegularExpressionLiteral;
