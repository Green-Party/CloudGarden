"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ArrayUtils_1 = require("../ArrayUtils");
const comparers_1 = require("../comparers");
class SortedKeyValueArray {
    constructor(getKey, comparer) {
        this.getKey = getKey;
        this.comparer = comparer;
        this.array = [];
    }
    set(value) {
        ArrayUtils_1.ArrayUtils.binaryInsertWithOverwrite(this.array, value, new comparers_1.PropertyComparer(this.getKey, this.comparer));
    }
    removeByValue(value) {
        this.removeByKey(this.getKey(value));
    }
    removeByKey(key) {
        const storedComparer = new comparers_1.ComparerToStoredComparer(this.comparer, key);
        const index = ArrayUtils_1.ArrayUtils.binarySearch(this.array, new comparers_1.PropertyStoredComparer(this.getKey, storedComparer));
        if (index >= 0)
            this.array.splice(index, 1);
    }
    getArrayCopy() {
        return [...this.array];
    }
    hasItems() {
        return this.array.length > 0;
    }
    *entries() {
        yield* this.array;
    }
}
exports.SortedKeyValueArray = SortedKeyValueArray;
